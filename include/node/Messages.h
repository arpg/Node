// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NodeMessages.proto

#ifndef PROTOBUF_NodeMessages_2eproto__INCLUDED
#define PROTOBUF_NodeMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace msg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_NodeMessages_2eproto();
void protobuf_AssignDesc_NodeMessages_2eproto();
void protobuf_ShutdownFile_NodeMessages_2eproto();

class ResourceLocator;
class ResourceTable;
class GetTableRequest;
class GetTableResponse;
class SetTableRequest;
class SetTableResponse;
class DeleteFromTableRequest;
class DeleteFromTableResponse;
class HeartbeatRequest;
class HeartbeatResponse;
class Bool;
class String;
class Int;
class Void;

// ===================================================================

class ResourceLocator : public ::google::protobuf::Message {
 public:
  ResourceLocator();
  virtual ~ResourceLocator();

  ResourceLocator(const ResourceLocator& from);

  inline ResourceLocator& operator=(const ResourceLocator& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceLocator& default_instance();

  void Swap(ResourceLocator* other);

  // implements Message ----------------------------------------------

  ResourceLocator* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceLocator& from);
  void MergeFrom(const ResourceLocator& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string resource = 1;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 1;
  inline const ::std::string& resource() const;
  inline void set_resource(const ::std::string& value);
  inline void set_resource(const char* value);
  inline void set_resource(const char* value, size_t size);
  inline ::std::string* mutable_resource();
  inline ::std::string* release_resource();
  inline void set_allocated_resource(::std::string* resource);

  // required string address = 2;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 2;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  inline void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:msg.ResourceLocator)
 private:
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_address();
  inline void clear_has_address();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* resource_;
  ::std::string* address_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static ResourceLocator* default_instance_;
};
// -------------------------------------------------------------------

class ResourceTable : public ::google::protobuf::Message {
 public:
  ResourceTable();
  virtual ~ResourceTable();

  ResourceTable(const ResourceTable& from);

  inline ResourceTable& operator=(const ResourceTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceTable& default_instance();

  void Swap(ResourceTable* other);

  // implements Message ----------------------------------------------

  ResourceTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceTable& from);
  void MergeFrom(const ResourceTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg.ResourceLocator urls = 1;
  inline int urls_size() const;
  inline void clear_urls();
  static const int kUrlsFieldNumber = 1;
  inline const ::msg::ResourceLocator& urls(int index) const;
  inline ::msg::ResourceLocator* mutable_urls(int index);
  inline ::msg::ResourceLocator* add_urls();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator >&
      urls() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator >*
      mutable_urls();

  // required uint32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // required uint32 checksum = 3;
  inline bool has_checksum() const;
  inline void clear_checksum();
  static const int kChecksumFieldNumber = 3;
  inline ::google::protobuf::uint32 checksum() const;
  inline void set_checksum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg.ResourceTable)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_checksum();
  inline void clear_has_checksum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator > urls_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 checksum_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static ResourceTable* default_instance_;
};
// -------------------------------------------------------------------

class GetTableRequest : public ::google::protobuf::Message {
 public:
  GetTableRequest();
  virtual ~GetTableRequest();

  GetTableRequest(const GetTableRequest& from);

  inline GetTableRequest& operator=(const GetTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableRequest& default_instance();

  void Swap(GetTableRequest* other);

  // implements Message ----------------------------------------------

  GetTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTableRequest& from);
  void MergeFrom(const GetTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string requesting_node_name = 1;
  inline bool has_requesting_node_name() const;
  inline void clear_requesting_node_name();
  static const int kRequestingNodeNameFieldNumber = 1;
  inline const ::std::string& requesting_node_name() const;
  inline void set_requesting_node_name(const ::std::string& value);
  inline void set_requesting_node_name(const char* value);
  inline void set_requesting_node_name(const char* value, size_t size);
  inline ::std::string* mutable_requesting_node_name();
  inline ::std::string* release_requesting_node_name();
  inline void set_allocated_requesting_node_name(::std::string* requesting_node_name);

  // required string requesting_node_addr = 2;
  inline bool has_requesting_node_addr() const;
  inline void clear_requesting_node_addr();
  static const int kRequestingNodeAddrFieldNumber = 2;
  inline const ::std::string& requesting_node_addr() const;
  inline void set_requesting_node_addr(const ::std::string& value);
  inline void set_requesting_node_addr(const char* value);
  inline void set_requesting_node_addr(const char* value, size_t size);
  inline ::std::string* mutable_requesting_node_addr();
  inline ::std::string* release_requesting_node_addr();
  inline void set_allocated_requesting_node_addr(::std::string* requesting_node_addr);

  // @@protoc_insertion_point(class_scope:msg.GetTableRequest)
 private:
  inline void set_has_requesting_node_name();
  inline void clear_has_requesting_node_name();
  inline void set_has_requesting_node_addr();
  inline void clear_has_requesting_node_addr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* requesting_node_name_;
  ::std::string* requesting_node_addr_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static GetTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetTableResponse : public ::google::protobuf::Message {
 public:
  GetTableResponse();
  virtual ~GetTableResponse();

  GetTableResponse(const GetTableResponse& from);

  inline GetTableResponse& operator=(const GetTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableResponse& default_instance();

  void Swap(GetTableResponse* other);

  // implements Message ----------------------------------------------

  GetTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTableResponse& from);
  void MergeFrom(const GetTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sender_name = 1;
  inline bool has_sender_name() const;
  inline void clear_sender_name();
  static const int kSenderNameFieldNumber = 1;
  inline const ::std::string& sender_name() const;
  inline void set_sender_name(const ::std::string& value);
  inline void set_sender_name(const char* value);
  inline void set_sender_name(const char* value, size_t size);
  inline ::std::string* mutable_sender_name();
  inline ::std::string* release_sender_name();
  inline void set_allocated_sender_name(::std::string* sender_name);

  // required .msg.ResourceTable resource_table = 2;
  inline bool has_resource_table() const;
  inline void clear_resource_table();
  static const int kResourceTableFieldNumber = 2;
  inline const ::msg::ResourceTable& resource_table() const;
  inline ::msg::ResourceTable* mutable_resource_table();
  inline ::msg::ResourceTable* release_resource_table();
  inline void set_allocated_resource_table(::msg::ResourceTable* resource_table);

  // @@protoc_insertion_point(class_scope:msg.GetTableResponse)
 private:
  inline void set_has_sender_name();
  inline void clear_has_sender_name();
  inline void set_has_resource_table();
  inline void clear_has_resource_table();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sender_name_;
  ::msg::ResourceTable* resource_table_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static GetTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetTableRequest : public ::google::protobuf::Message {
 public:
  SetTableRequest();
  virtual ~SetTableRequest();

  SetTableRequest(const SetTableRequest& from);

  inline SetTableRequest& operator=(const SetTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTableRequest& default_instance();

  void Swap(SetTableRequest* other);

  // implements Message ----------------------------------------------

  SetTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTableRequest& from);
  void MergeFrom(const SetTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string requesting_node_name = 1;
  inline bool has_requesting_node_name() const;
  inline void clear_requesting_node_name();
  static const int kRequestingNodeNameFieldNumber = 1;
  inline const ::std::string& requesting_node_name() const;
  inline void set_requesting_node_name(const ::std::string& value);
  inline void set_requesting_node_name(const char* value);
  inline void set_requesting_node_name(const char* value, size_t size);
  inline ::std::string* mutable_requesting_node_name();
  inline ::std::string* release_requesting_node_name();
  inline void set_allocated_requesting_node_name(::std::string* requesting_node_name);

  // required string requesting_node_addr = 2;
  inline bool has_requesting_node_addr() const;
  inline void clear_requesting_node_addr();
  static const int kRequestingNodeAddrFieldNumber = 2;
  inline const ::std::string& requesting_node_addr() const;
  inline void set_requesting_node_addr(const ::std::string& value);
  inline void set_requesting_node_addr(const char* value);
  inline void set_requesting_node_addr(const char* value, size_t size);
  inline ::std::string* mutable_requesting_node_addr();
  inline ::std::string* release_requesting_node_addr();
  inline void set_allocated_requesting_node_addr(::std::string* requesting_node_addr);

  // required .msg.ResourceTable resource_table = 3;
  inline bool has_resource_table() const;
  inline void clear_resource_table();
  static const int kResourceTableFieldNumber = 3;
  inline const ::msg::ResourceTable& resource_table() const;
  inline ::msg::ResourceTable* mutable_resource_table();
  inline ::msg::ResourceTable* release_resource_table();
  inline void set_allocated_resource_table(::msg::ResourceTable* resource_table);

  // @@protoc_insertion_point(class_scope:msg.SetTableRequest)
 private:
  inline void set_has_requesting_node_name();
  inline void clear_has_requesting_node_name();
  inline void set_has_requesting_node_addr();
  inline void clear_has_requesting_node_addr();
  inline void set_has_resource_table();
  inline void clear_has_resource_table();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* requesting_node_name_;
  ::std::string* requesting_node_addr_;
  ::msg::ResourceTable* resource_table_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static SetTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetTableResponse : public ::google::protobuf::Message {
 public:
  SetTableResponse();
  virtual ~SetTableResponse();

  SetTableResponse(const SetTableResponse& from);

  inline SetTableResponse& operator=(const SetTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTableResponse& default_instance();

  void Swap(SetTableResponse* other);

  // implements Message ----------------------------------------------

  SetTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTableResponse& from);
  void MergeFrom(const SetTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // required uint32 checksum = 2;
  inline bool has_checksum() const;
  inline void clear_checksum();
  static const int kChecksumFieldNumber = 2;
  inline ::google::protobuf::uint32 checksum() const;
  inline void set_checksum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg.SetTableResponse)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_checksum();
  inline void clear_has_checksum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 checksum_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static SetTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFromTableRequest : public ::google::protobuf::Message {
 public:
  DeleteFromTableRequest();
  virtual ~DeleteFromTableRequest();

  DeleteFromTableRequest(const DeleteFromTableRequest& from);

  inline DeleteFromTableRequest& operator=(const DeleteFromTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFromTableRequest& default_instance();

  void Swap(DeleteFromTableRequest* other);

  // implements Message ----------------------------------------------

  DeleteFromTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteFromTableRequest& from);
  void MergeFrom(const DeleteFromTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string requesting_node_name = 1;
  inline bool has_requesting_node_name() const;
  inline void clear_requesting_node_name();
  static const int kRequestingNodeNameFieldNumber = 1;
  inline const ::std::string& requesting_node_name() const;
  inline void set_requesting_node_name(const ::std::string& value);
  inline void set_requesting_node_name(const char* value);
  inline void set_requesting_node_name(const char* value, size_t size);
  inline ::std::string* mutable_requesting_node_name();
  inline ::std::string* release_requesting_node_name();
  inline void set_allocated_requesting_node_name(::std::string* requesting_node_name);

  // required string requesting_node_addr = 2;
  inline bool has_requesting_node_addr() const;
  inline void clear_requesting_node_addr();
  static const int kRequestingNodeAddrFieldNumber = 2;
  inline const ::std::string& requesting_node_addr() const;
  inline void set_requesting_node_addr(const ::std::string& value);
  inline void set_requesting_node_addr(const char* value);
  inline void set_requesting_node_addr(const char* value, size_t size);
  inline ::std::string* mutable_requesting_node_addr();
  inline ::std::string* release_requesting_node_addr();
  inline void set_allocated_requesting_node_addr(::std::string* requesting_node_addr);

  // repeated .msg.ResourceLocator urls_to_delete = 3;
  inline int urls_to_delete_size() const;
  inline void clear_urls_to_delete();
  static const int kUrlsToDeleteFieldNumber = 3;
  inline const ::msg::ResourceLocator& urls_to_delete(int index) const;
  inline ::msg::ResourceLocator* mutable_urls_to_delete(int index);
  inline ::msg::ResourceLocator* add_urls_to_delete();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator >&
      urls_to_delete() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator >*
      mutable_urls_to_delete();

  // @@protoc_insertion_point(class_scope:msg.DeleteFromTableRequest)
 private:
  inline void set_has_requesting_node_name();
  inline void clear_has_requesting_node_name();
  inline void set_has_requesting_node_addr();
  inline void clear_has_requesting_node_addr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* requesting_node_name_;
  ::std::string* requesting_node_addr_;
  ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator > urls_to_delete_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static DeleteFromTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFromTableResponse : public ::google::protobuf::Message {
 public:
  DeleteFromTableResponse();
  virtual ~DeleteFromTableResponse();

  DeleteFromTableResponse(const DeleteFromTableResponse& from);

  inline DeleteFromTableResponse& operator=(const DeleteFromTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFromTableResponse& default_instance();

  void Swap(DeleteFromTableResponse* other);

  // implements Message ----------------------------------------------

  DeleteFromTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteFromTableResponse& from);
  void MergeFrom(const DeleteFromTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.DeleteFromTableResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static DeleteFromTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatRequest : public ::google::protobuf::Message {
 public:
  HeartbeatRequest();
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRequest& default_instance();

  void Swap(HeartbeatRequest* other);

  // implements Message ----------------------------------------------

  HeartbeatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // required uint32 checksum = 2;
  inline bool has_checksum() const;
  inline void clear_checksum();
  static const int kChecksumFieldNumber = 2;
  inline ::google::protobuf::uint32 checksum() const;
  inline void set_checksum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg.HeartbeatRequest)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_checksum();
  inline void clear_has_checksum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 checksum_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatResponse : public ::google::protobuf::Message {
 public:
  HeartbeatResponse();
  virtual ~HeartbeatResponse();

  HeartbeatResponse(const HeartbeatResponse& from);

  inline HeartbeatResponse& operator=(const HeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatResponse& default_instance();

  void Swap(HeartbeatResponse* other);

  // implements Message ----------------------------------------------

  HeartbeatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatResponse& from);
  void MergeFrom(const HeartbeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // required uint32 checksum = 2;
  inline bool has_checksum() const;
  inline void clear_checksum();
  static const int kChecksumFieldNumber = 2;
  inline ::google::protobuf::uint32 checksum() const;
  inline void set_checksum(::google::protobuf::uint32 value);

  // optional .msg.ResourceTable resource_table = 3;
  inline bool has_resource_table() const;
  inline void clear_resource_table();
  static const int kResourceTableFieldNumber = 3;
  inline const ::msg::ResourceTable& resource_table() const;
  inline ::msg::ResourceTable* mutable_resource_table();
  inline ::msg::ResourceTable* release_resource_table();
  inline void set_allocated_resource_table(::msg::ResourceTable* resource_table);

  // @@protoc_insertion_point(class_scope:msg.HeartbeatResponse)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_checksum();
  inline void clear_has_checksum();
  inline void set_has_resource_table();
  inline void clear_has_resource_table();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 checksum_;
  ::msg::ResourceTable* resource_table_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatResponse* default_instance_;
};
// -------------------------------------------------------------------

class Bool : public ::google::protobuf::Message {
 public:
  Bool();
  virtual ~Bool();

  Bool(const Bool& from);

  inline Bool& operator=(const Bool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bool& default_instance();

  void Swap(Bool* other);

  // implements Message ----------------------------------------------

  Bool* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Bool& from);
  void MergeFrom(const Bool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool val = 1;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 1;
  inline bool val() const;
  inline void set_val(bool value);

  // @@protoc_insertion_point(class_scope:msg.Bool)
 private:
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool val_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static Bool* default_instance_;
};
// -------------------------------------------------------------------

class String : public ::google::protobuf::Message {
 public:
  String();
  virtual ~String();

  String(const String& from);

  inline String& operator=(const String& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const String& default_instance();

  void Swap(String* other);

  // implements Message ----------------------------------------------

  String* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const String& from);
  void MergeFrom(const String& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:msg.String)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* value_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static String* default_instance_;
};
// -------------------------------------------------------------------

class Int : public ::google::protobuf::Message {
 public:
  Int();
  virtual ~Int();

  Int(const Int& from);

  inline Int& operator=(const Int& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int& default_instance();

  void Swap(Int* other);

  // implements Message ----------------------------------------------

  Int* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int& from);
  void MergeFrom(const Int& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.Int)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static Int* default_instance_;
};
// -------------------------------------------------------------------

class Void : public ::google::protobuf::Message {
 public:
  Void();
  virtual ~Void();

  Void(const Void& from);

  inline Void& operator=(const Void& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Void& default_instance();

  void Swap(Void* other);

  // implements Message ----------------------------------------------

  Void* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Void& from);
  void MergeFrom(const Void& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.Void)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_NodeMessages_2eproto();
  friend void protobuf_AssignDesc_NodeMessages_2eproto();
  friend void protobuf_ShutdownFile_NodeMessages_2eproto();

  void InitAsDefaultInstance();
  static Void* default_instance_;
};
// ===================================================================


// ===================================================================

// ResourceLocator

// required string resource = 1;
inline bool ResourceLocator::has_resource() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResourceLocator::set_has_resource() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResourceLocator::clear_has_resource() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResourceLocator::clear_resource() {
  if (resource_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resource_->clear();
  }
  clear_has_resource();
}
inline const ::std::string& ResourceLocator::resource() const {
  // @@protoc_insertion_point(field_get:msg.ResourceLocator.resource)
  return *resource_;
}
inline void ResourceLocator::set_resource(const ::std::string& value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ResourceLocator.resource)
}
inline void ResourceLocator::set_resource(const char* value) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resource_ = new ::std::string;
  }
  resource_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ResourceLocator.resource)
}
inline void ResourceLocator::set_resource(const char* value, size_t size) {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resource_ = new ::std::string;
  }
  resource_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ResourceLocator.resource)
}
inline ::std::string* ResourceLocator::mutable_resource() {
  set_has_resource();
  if (resource_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resource_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ResourceLocator.resource)
  return resource_;
}
inline ::std::string* ResourceLocator::release_resource() {
  clear_has_resource();
  if (resource_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resource_;
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ResourceLocator::set_allocated_resource(::std::string* resource) {
  if (resource_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resource_;
  }
  if (resource) {
    set_has_resource();
    resource_ = resource;
  } else {
    clear_has_resource();
    resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ResourceLocator.resource)
}

// required string address = 2;
inline bool ResourceLocator::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResourceLocator::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResourceLocator::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResourceLocator::clear_address() {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_->clear();
  }
  clear_has_address();
}
inline const ::std::string& ResourceLocator::address() const {
  // @@protoc_insertion_point(field_get:msg.ResourceLocator.address)
  return *address_;
}
inline void ResourceLocator::set_address(const ::std::string& value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set:msg.ResourceLocator.address)
}
inline void ResourceLocator::set_address(const char* value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.ResourceLocator.address)
}
inline void ResourceLocator::set_address(const char* value, size_t size) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.ResourceLocator.address)
}
inline ::std::string* ResourceLocator::mutable_address() {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.ResourceLocator.address)
  return address_;
}
inline ::std::string* ResourceLocator::release_address() {
  clear_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = address_;
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ResourceLocator::set_allocated_address(::std::string* address) {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete address_;
  }
  if (address) {
    set_has_address();
    address_ = address;
  } else {
    clear_has_address();
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.ResourceLocator.address)
}

// -------------------------------------------------------------------

// ResourceTable

// repeated .msg.ResourceLocator urls = 1;
inline int ResourceTable::urls_size() const {
  return urls_.size();
}
inline void ResourceTable::clear_urls() {
  urls_.Clear();
}
inline const ::msg::ResourceLocator& ResourceTable::urls(int index) const {
  // @@protoc_insertion_point(field_get:msg.ResourceTable.urls)
  return urls_.Get(index);
}
inline ::msg::ResourceLocator* ResourceTable::mutable_urls(int index) {
  // @@protoc_insertion_point(field_mutable:msg.ResourceTable.urls)
  return urls_.Mutable(index);
}
inline ::msg::ResourceLocator* ResourceTable::add_urls() {
  // @@protoc_insertion_point(field_add:msg.ResourceTable.urls)
  return urls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator >&
ResourceTable::urls() const {
  // @@protoc_insertion_point(field_list:msg.ResourceTable.urls)
  return urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator >*
ResourceTable::mutable_urls() {
  // @@protoc_insertion_point(field_mutable_list:msg.ResourceTable.urls)
  return &urls_;
}

// required uint32 version = 2;
inline bool ResourceTable::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResourceTable::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResourceTable::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResourceTable::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 ResourceTable::version() const {
  // @@protoc_insertion_point(field_get:msg.ResourceTable.version)
  return version_;
}
inline void ResourceTable::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:msg.ResourceTable.version)
}

// required uint32 checksum = 3;
inline bool ResourceTable::has_checksum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResourceTable::set_has_checksum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResourceTable::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResourceTable::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
inline ::google::protobuf::uint32 ResourceTable::checksum() const {
  // @@protoc_insertion_point(field_get:msg.ResourceTable.checksum)
  return checksum_;
}
inline void ResourceTable::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:msg.ResourceTable.checksum)
}

// -------------------------------------------------------------------

// GetTableRequest

// required string requesting_node_name = 1;
inline bool GetTableRequest::has_requesting_node_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableRequest::set_has_requesting_node_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableRequest::clear_has_requesting_node_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableRequest::clear_requesting_node_name() {
  if (requesting_node_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_->clear();
  }
  clear_has_requesting_node_name();
}
inline const ::std::string& GetTableRequest::requesting_node_name() const {
  // @@protoc_insertion_point(field_get:msg.GetTableRequest.requesting_node_name)
  return *requesting_node_name_;
}
inline void GetTableRequest::set_requesting_node_name(const ::std::string& value) {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  requesting_node_name_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GetTableRequest.requesting_node_name)
}
inline void GetTableRequest::set_requesting_node_name(const char* value) {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  requesting_node_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GetTableRequest.requesting_node_name)
}
inline void GetTableRequest::set_requesting_node_name(const char* value, size_t size) {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  requesting_node_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GetTableRequest.requesting_node_name)
}
inline ::std::string* GetTableRequest::mutable_requesting_node_name() {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GetTableRequest.requesting_node_name)
  return requesting_node_name_;
}
inline ::std::string* GetTableRequest::release_requesting_node_name() {
  clear_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = requesting_node_name_;
    requesting_node_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetTableRequest::set_allocated_requesting_node_name(::std::string* requesting_node_name) {
  if (requesting_node_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requesting_node_name_;
  }
  if (requesting_node_name) {
    set_has_requesting_node_name();
    requesting_node_name_ = requesting_node_name;
  } else {
    clear_has_requesting_node_name();
    requesting_node_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GetTableRequest.requesting_node_name)
}

// required string requesting_node_addr = 2;
inline bool GetTableRequest::has_requesting_node_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableRequest::set_has_requesting_node_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableRequest::clear_has_requesting_node_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableRequest::clear_requesting_node_addr() {
  if (requesting_node_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_->clear();
  }
  clear_has_requesting_node_addr();
}
inline const ::std::string& GetTableRequest::requesting_node_addr() const {
  // @@protoc_insertion_point(field_get:msg.GetTableRequest.requesting_node_addr)
  return *requesting_node_addr_;
}
inline void GetTableRequest::set_requesting_node_addr(const ::std::string& value) {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  requesting_node_addr_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GetTableRequest.requesting_node_addr)
}
inline void GetTableRequest::set_requesting_node_addr(const char* value) {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  requesting_node_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GetTableRequest.requesting_node_addr)
}
inline void GetTableRequest::set_requesting_node_addr(const char* value, size_t size) {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  requesting_node_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GetTableRequest.requesting_node_addr)
}
inline ::std::string* GetTableRequest::mutable_requesting_node_addr() {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GetTableRequest.requesting_node_addr)
  return requesting_node_addr_;
}
inline ::std::string* GetTableRequest::release_requesting_node_addr() {
  clear_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = requesting_node_addr_;
    requesting_node_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetTableRequest::set_allocated_requesting_node_addr(::std::string* requesting_node_addr) {
  if (requesting_node_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requesting_node_addr_;
  }
  if (requesting_node_addr) {
    set_has_requesting_node_addr();
    requesting_node_addr_ = requesting_node_addr;
  } else {
    clear_has_requesting_node_addr();
    requesting_node_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GetTableRequest.requesting_node_addr)
}

// -------------------------------------------------------------------

// GetTableResponse

// required string sender_name = 1;
inline bool GetTableResponse::has_sender_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableResponse::set_has_sender_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableResponse::clear_has_sender_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableResponse::clear_sender_name() {
  if (sender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_->clear();
  }
  clear_has_sender_name();
}
inline const ::std::string& GetTableResponse::sender_name() const {
  // @@protoc_insertion_point(field_get:msg.GetTableResponse.sender_name)
  return *sender_name_;
}
inline void GetTableResponse::set_sender_name(const ::std::string& value) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
  // @@protoc_insertion_point(field_set:msg.GetTableResponse.sender_name)
}
inline void GetTableResponse::set_sender_name(const char* value) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.GetTableResponse.sender_name)
}
inline void GetTableResponse::set_sender_name(const char* value, size_t size) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.GetTableResponse.sender_name)
}
inline ::std::string* GetTableResponse::mutable_sender_name() {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.GetTableResponse.sender_name)
  return sender_name_;
}
inline ::std::string* GetTableResponse::release_sender_name() {
  clear_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sender_name_;
    sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetTableResponse::set_allocated_sender_name(::std::string* sender_name) {
  if (sender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_name_;
  }
  if (sender_name) {
    set_has_sender_name();
    sender_name_ = sender_name;
  } else {
    clear_has_sender_name();
    sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GetTableResponse.sender_name)
}

// required .msg.ResourceTable resource_table = 2;
inline bool GetTableResponse::has_resource_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableResponse::set_has_resource_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableResponse::clear_has_resource_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableResponse::clear_resource_table() {
  if (resource_table_ != NULL) resource_table_->::msg::ResourceTable::Clear();
  clear_has_resource_table();
}
inline const ::msg::ResourceTable& GetTableResponse::resource_table() const {
  // @@protoc_insertion_point(field_get:msg.GetTableResponse.resource_table)
  return resource_table_ != NULL ? *resource_table_ : *default_instance_->resource_table_;
}
inline ::msg::ResourceTable* GetTableResponse::mutable_resource_table() {
  set_has_resource_table();
  if (resource_table_ == NULL) resource_table_ = new ::msg::ResourceTable;
  // @@protoc_insertion_point(field_mutable:msg.GetTableResponse.resource_table)
  return resource_table_;
}
inline ::msg::ResourceTable* GetTableResponse::release_resource_table() {
  clear_has_resource_table();
  ::msg::ResourceTable* temp = resource_table_;
  resource_table_ = NULL;
  return temp;
}
inline void GetTableResponse::set_allocated_resource_table(::msg::ResourceTable* resource_table) {
  delete resource_table_;
  resource_table_ = resource_table;
  if (resource_table) {
    set_has_resource_table();
  } else {
    clear_has_resource_table();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.GetTableResponse.resource_table)
}

// -------------------------------------------------------------------

// SetTableRequest

// required string requesting_node_name = 1;
inline bool SetTableRequest::has_requesting_node_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTableRequest::set_has_requesting_node_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTableRequest::clear_has_requesting_node_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTableRequest::clear_requesting_node_name() {
  if (requesting_node_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_->clear();
  }
  clear_has_requesting_node_name();
}
inline const ::std::string& SetTableRequest::requesting_node_name() const {
  // @@protoc_insertion_point(field_get:msg.SetTableRequest.requesting_node_name)
  return *requesting_node_name_;
}
inline void SetTableRequest::set_requesting_node_name(const ::std::string& value) {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  requesting_node_name_->assign(value);
  // @@protoc_insertion_point(field_set:msg.SetTableRequest.requesting_node_name)
}
inline void SetTableRequest::set_requesting_node_name(const char* value) {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  requesting_node_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.SetTableRequest.requesting_node_name)
}
inline void SetTableRequest::set_requesting_node_name(const char* value, size_t size) {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  requesting_node_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.SetTableRequest.requesting_node_name)
}
inline ::std::string* SetTableRequest::mutable_requesting_node_name() {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.SetTableRequest.requesting_node_name)
  return requesting_node_name_;
}
inline ::std::string* SetTableRequest::release_requesting_node_name() {
  clear_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = requesting_node_name_;
    requesting_node_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetTableRequest::set_allocated_requesting_node_name(::std::string* requesting_node_name) {
  if (requesting_node_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requesting_node_name_;
  }
  if (requesting_node_name) {
    set_has_requesting_node_name();
    requesting_node_name_ = requesting_node_name;
  } else {
    clear_has_requesting_node_name();
    requesting_node_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.SetTableRequest.requesting_node_name)
}

// required string requesting_node_addr = 2;
inline bool SetTableRequest::has_requesting_node_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetTableRequest::set_has_requesting_node_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetTableRequest::clear_has_requesting_node_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetTableRequest::clear_requesting_node_addr() {
  if (requesting_node_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_->clear();
  }
  clear_has_requesting_node_addr();
}
inline const ::std::string& SetTableRequest::requesting_node_addr() const {
  // @@protoc_insertion_point(field_get:msg.SetTableRequest.requesting_node_addr)
  return *requesting_node_addr_;
}
inline void SetTableRequest::set_requesting_node_addr(const ::std::string& value) {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  requesting_node_addr_->assign(value);
  // @@protoc_insertion_point(field_set:msg.SetTableRequest.requesting_node_addr)
}
inline void SetTableRequest::set_requesting_node_addr(const char* value) {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  requesting_node_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.SetTableRequest.requesting_node_addr)
}
inline void SetTableRequest::set_requesting_node_addr(const char* value, size_t size) {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  requesting_node_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.SetTableRequest.requesting_node_addr)
}
inline ::std::string* SetTableRequest::mutable_requesting_node_addr() {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.SetTableRequest.requesting_node_addr)
  return requesting_node_addr_;
}
inline ::std::string* SetTableRequest::release_requesting_node_addr() {
  clear_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = requesting_node_addr_;
    requesting_node_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetTableRequest::set_allocated_requesting_node_addr(::std::string* requesting_node_addr) {
  if (requesting_node_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requesting_node_addr_;
  }
  if (requesting_node_addr) {
    set_has_requesting_node_addr();
    requesting_node_addr_ = requesting_node_addr;
  } else {
    clear_has_requesting_node_addr();
    requesting_node_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.SetTableRequest.requesting_node_addr)
}

// required .msg.ResourceTable resource_table = 3;
inline bool SetTableRequest::has_resource_table() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetTableRequest::set_has_resource_table() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetTableRequest::clear_has_resource_table() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetTableRequest::clear_resource_table() {
  if (resource_table_ != NULL) resource_table_->::msg::ResourceTable::Clear();
  clear_has_resource_table();
}
inline const ::msg::ResourceTable& SetTableRequest::resource_table() const {
  // @@protoc_insertion_point(field_get:msg.SetTableRequest.resource_table)
  return resource_table_ != NULL ? *resource_table_ : *default_instance_->resource_table_;
}
inline ::msg::ResourceTable* SetTableRequest::mutable_resource_table() {
  set_has_resource_table();
  if (resource_table_ == NULL) resource_table_ = new ::msg::ResourceTable;
  // @@protoc_insertion_point(field_mutable:msg.SetTableRequest.resource_table)
  return resource_table_;
}
inline ::msg::ResourceTable* SetTableRequest::release_resource_table() {
  clear_has_resource_table();
  ::msg::ResourceTable* temp = resource_table_;
  resource_table_ = NULL;
  return temp;
}
inline void SetTableRequest::set_allocated_resource_table(::msg::ResourceTable* resource_table) {
  delete resource_table_;
  resource_table_ = resource_table;
  if (resource_table) {
    set_has_resource_table();
  } else {
    clear_has_resource_table();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.SetTableRequest.resource_table)
}

// -------------------------------------------------------------------

// SetTableResponse

// required uint32 version = 1;
inline bool SetTableResponse::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTableResponse::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTableResponse::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTableResponse::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 SetTableResponse::version() const {
  // @@protoc_insertion_point(field_get:msg.SetTableResponse.version)
  return version_;
}
inline void SetTableResponse::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:msg.SetTableResponse.version)
}

// required uint32 checksum = 2;
inline bool SetTableResponse::has_checksum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetTableResponse::set_has_checksum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetTableResponse::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetTableResponse::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
inline ::google::protobuf::uint32 SetTableResponse::checksum() const {
  // @@protoc_insertion_point(field_get:msg.SetTableResponse.checksum)
  return checksum_;
}
inline void SetTableResponse::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:msg.SetTableResponse.checksum)
}

// -------------------------------------------------------------------

// DeleteFromTableRequest

// required string requesting_node_name = 1;
inline bool DeleteFromTableRequest::has_requesting_node_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFromTableRequest::set_has_requesting_node_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFromTableRequest::clear_has_requesting_node_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFromTableRequest::clear_requesting_node_name() {
  if (requesting_node_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_->clear();
  }
  clear_has_requesting_node_name();
}
inline const ::std::string& DeleteFromTableRequest::requesting_node_name() const {
  // @@protoc_insertion_point(field_get:msg.DeleteFromTableRequest.requesting_node_name)
  return *requesting_node_name_;
}
inline void DeleteFromTableRequest::set_requesting_node_name(const ::std::string& value) {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  requesting_node_name_->assign(value);
  // @@protoc_insertion_point(field_set:msg.DeleteFromTableRequest.requesting_node_name)
}
inline void DeleteFromTableRequest::set_requesting_node_name(const char* value) {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  requesting_node_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.DeleteFromTableRequest.requesting_node_name)
}
inline void DeleteFromTableRequest::set_requesting_node_name(const char* value, size_t size) {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  requesting_node_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.DeleteFromTableRequest.requesting_node_name)
}
inline ::std::string* DeleteFromTableRequest::mutable_requesting_node_name() {
  set_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.DeleteFromTableRequest.requesting_node_name)
  return requesting_node_name_;
}
inline ::std::string* DeleteFromTableRequest::release_requesting_node_name() {
  clear_has_requesting_node_name();
  if (requesting_node_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = requesting_node_name_;
    requesting_node_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeleteFromTableRequest::set_allocated_requesting_node_name(::std::string* requesting_node_name) {
  if (requesting_node_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requesting_node_name_;
  }
  if (requesting_node_name) {
    set_has_requesting_node_name();
    requesting_node_name_ = requesting_node_name;
  } else {
    clear_has_requesting_node_name();
    requesting_node_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.DeleteFromTableRequest.requesting_node_name)
}

// required string requesting_node_addr = 2;
inline bool DeleteFromTableRequest::has_requesting_node_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteFromTableRequest::set_has_requesting_node_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteFromTableRequest::clear_has_requesting_node_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteFromTableRequest::clear_requesting_node_addr() {
  if (requesting_node_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_->clear();
  }
  clear_has_requesting_node_addr();
}
inline const ::std::string& DeleteFromTableRequest::requesting_node_addr() const {
  // @@protoc_insertion_point(field_get:msg.DeleteFromTableRequest.requesting_node_addr)
  return *requesting_node_addr_;
}
inline void DeleteFromTableRequest::set_requesting_node_addr(const ::std::string& value) {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  requesting_node_addr_->assign(value);
  // @@protoc_insertion_point(field_set:msg.DeleteFromTableRequest.requesting_node_addr)
}
inline void DeleteFromTableRequest::set_requesting_node_addr(const char* value) {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  requesting_node_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.DeleteFromTableRequest.requesting_node_addr)
}
inline void DeleteFromTableRequest::set_requesting_node_addr(const char* value, size_t size) {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  requesting_node_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.DeleteFromTableRequest.requesting_node_addr)
}
inline ::std::string* DeleteFromTableRequest::mutable_requesting_node_addr() {
  set_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requesting_node_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.DeleteFromTableRequest.requesting_node_addr)
  return requesting_node_addr_;
}
inline ::std::string* DeleteFromTableRequest::release_requesting_node_addr() {
  clear_has_requesting_node_addr();
  if (requesting_node_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = requesting_node_addr_;
    requesting_node_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeleteFromTableRequest::set_allocated_requesting_node_addr(::std::string* requesting_node_addr) {
  if (requesting_node_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requesting_node_addr_;
  }
  if (requesting_node_addr) {
    set_has_requesting_node_addr();
    requesting_node_addr_ = requesting_node_addr;
  } else {
    clear_has_requesting_node_addr();
    requesting_node_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.DeleteFromTableRequest.requesting_node_addr)
}

// repeated .msg.ResourceLocator urls_to_delete = 3;
inline int DeleteFromTableRequest::urls_to_delete_size() const {
  return urls_to_delete_.size();
}
inline void DeleteFromTableRequest::clear_urls_to_delete() {
  urls_to_delete_.Clear();
}
inline const ::msg::ResourceLocator& DeleteFromTableRequest::urls_to_delete(int index) const {
  // @@protoc_insertion_point(field_get:msg.DeleteFromTableRequest.urls_to_delete)
  return urls_to_delete_.Get(index);
}
inline ::msg::ResourceLocator* DeleteFromTableRequest::mutable_urls_to_delete(int index) {
  // @@protoc_insertion_point(field_mutable:msg.DeleteFromTableRequest.urls_to_delete)
  return urls_to_delete_.Mutable(index);
}
inline ::msg::ResourceLocator* DeleteFromTableRequest::add_urls_to_delete() {
  // @@protoc_insertion_point(field_add:msg.DeleteFromTableRequest.urls_to_delete)
  return urls_to_delete_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator >&
DeleteFromTableRequest::urls_to_delete() const {
  // @@protoc_insertion_point(field_list:msg.DeleteFromTableRequest.urls_to_delete)
  return urls_to_delete_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::ResourceLocator >*
DeleteFromTableRequest::mutable_urls_to_delete() {
  // @@protoc_insertion_point(field_mutable_list:msg.DeleteFromTableRequest.urls_to_delete)
  return &urls_to_delete_;
}

// -------------------------------------------------------------------

// DeleteFromTableResponse

// -------------------------------------------------------------------

// HeartbeatRequest

// required uint32 version = 1;
inline bool HeartbeatRequest::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatRequest::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatRequest::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 HeartbeatRequest::version() const {
  // @@protoc_insertion_point(field_get:msg.HeartbeatRequest.version)
  return version_;
}
inline void HeartbeatRequest::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:msg.HeartbeatRequest.version)
}

// required uint32 checksum = 2;
inline bool HeartbeatRequest::has_checksum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartbeatRequest::set_has_checksum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartbeatRequest::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartbeatRequest::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
inline ::google::protobuf::uint32 HeartbeatRequest::checksum() const {
  // @@protoc_insertion_point(field_get:msg.HeartbeatRequest.checksum)
  return checksum_;
}
inline void HeartbeatRequest::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:msg.HeartbeatRequest.checksum)
}

// -------------------------------------------------------------------

// HeartbeatResponse

// required uint32 version = 1;
inline bool HeartbeatResponse::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatResponse::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatResponse::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatResponse::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 HeartbeatResponse::version() const {
  // @@protoc_insertion_point(field_get:msg.HeartbeatResponse.version)
  return version_;
}
inline void HeartbeatResponse::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:msg.HeartbeatResponse.version)
}

// required uint32 checksum = 2;
inline bool HeartbeatResponse::has_checksum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartbeatResponse::set_has_checksum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartbeatResponse::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartbeatResponse::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
inline ::google::protobuf::uint32 HeartbeatResponse::checksum() const {
  // @@protoc_insertion_point(field_get:msg.HeartbeatResponse.checksum)
  return checksum_;
}
inline void HeartbeatResponse::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:msg.HeartbeatResponse.checksum)
}

// optional .msg.ResourceTable resource_table = 3;
inline bool HeartbeatResponse::has_resource_table() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeartbeatResponse::set_has_resource_table() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeartbeatResponse::clear_has_resource_table() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeartbeatResponse::clear_resource_table() {
  if (resource_table_ != NULL) resource_table_->::msg::ResourceTable::Clear();
  clear_has_resource_table();
}
inline const ::msg::ResourceTable& HeartbeatResponse::resource_table() const {
  // @@protoc_insertion_point(field_get:msg.HeartbeatResponse.resource_table)
  return resource_table_ != NULL ? *resource_table_ : *default_instance_->resource_table_;
}
inline ::msg::ResourceTable* HeartbeatResponse::mutable_resource_table() {
  set_has_resource_table();
  if (resource_table_ == NULL) resource_table_ = new ::msg::ResourceTable;
  // @@protoc_insertion_point(field_mutable:msg.HeartbeatResponse.resource_table)
  return resource_table_;
}
inline ::msg::ResourceTable* HeartbeatResponse::release_resource_table() {
  clear_has_resource_table();
  ::msg::ResourceTable* temp = resource_table_;
  resource_table_ = NULL;
  return temp;
}
inline void HeartbeatResponse::set_allocated_resource_table(::msg::ResourceTable* resource_table) {
  delete resource_table_;
  resource_table_ = resource_table;
  if (resource_table) {
    set_has_resource_table();
  } else {
    clear_has_resource_table();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.HeartbeatResponse.resource_table)
}

// -------------------------------------------------------------------

// Bool

// required bool val = 1;
inline bool Bool::has_val() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Bool::set_has_val() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Bool::clear_has_val() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Bool::clear_val() {
  val_ = false;
  clear_has_val();
}
inline bool Bool::val() const {
  // @@protoc_insertion_point(field_get:msg.Bool.val)
  return val_;
}
inline void Bool::set_val(bool value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:msg.Bool.val)
}

// -------------------------------------------------------------------

// String

// optional string value = 1;
inline bool String::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void String::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void String::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void String::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& String::value() const {
  // @@protoc_insertion_point(field_get:msg.String.value)
  return *value_;
}
inline void String::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:msg.String.value)
}
inline void String::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg.String.value)
}
inline void String::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg.String.value)
}
inline ::std::string* String::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg.String.value)
  return value_;
}
inline ::std::string* String::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void String::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg.String.value)
}

// -------------------------------------------------------------------

// Int

// optional int32 value = 1;
inline bool Int::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Int::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Int::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Int::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 Int::value() const {
  // @@protoc_insertion_point(field_get:msg.Int.value)
  return value_;
}
inline void Int::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg.Int.value)
}

// -------------------------------------------------------------------

// Void


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_NodeMessages_2eproto__INCLUDED
